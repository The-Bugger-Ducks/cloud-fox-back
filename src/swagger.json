{
  "openapi": "3.0.0",
  "info": {
    "title": "Cloud Fox API",
    "description": "This api has objective register and get data from meteorological stations",
    "contact": {
      "email": "bugger-ducker-lab@gmail.com"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "API"
    },
    {
      "url": "https://cloud-fox.onrender.com",
      "description": "API"
    }
  ],
  "paths": {
    "/users/": {
      "get": {
        "summary": "Get All Users",
        "description": "This route has objective to get all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create user account",
        "description": "This route has objective to create user in system",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              },
              "examples": {
                "user": {
                  "value": {
                    "username": "Gabriel",
                    "email": "gabriel.camargo@outlook.com",
                    "role": "common"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/": {
      "get": {
        "summary": "Get One Users",
        "description": "This route has objective to get one users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID for search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "This route has objective to delete a users from system",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Nome do produto para busca",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Usuário deletado com sucesso"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Usuário não encontrado"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/updateRole": {
      "put": {
        "summary": "Update user role",
        "description": "This route has objective to update a user role",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/solicitation": {
      "post": {
        "summary": "Register a solicitation to change user role",
        "description": "This route has objective to Register a solicitation to change user role",
        "tags": [
          "Solicitations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSolicitation"
              },
              "examples": {
                "user-nancy": {
                  "value": {
                    "roleReq": "advanced",
                    "user": "9c6571a2-9fde-4a11-9949-9be4118a7b83"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": "Solicitação criada"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": "Usuário não encontrado"
                }
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": "Essa solicitação já existe"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": "Você já possuí este nível de acesso"
                }
              }
            }
          }
        }
      }
    },
    "/solicitation": {
      "get": {
        "summary": "Get All Solicitations",
        "description": "This route has objective to get all solicitations",
        "tags": [
          "Solicitations"
        ]
      },
      "delete": {
        "summary": "Change a user role by solicitation request and delete it",
        "description": "This route has objective to Change user role by solicitation request and delete it",
        "tags": [
          "Solicitations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeSolicitation"
              },
              "examples": {
                "example-payload": {
                  "value": {
                    "id": "43412346-b30a-45a4-9326-7b84220b7896",
                    "roleReq": "advanced",
                    "user": "9c6571a2-9fde-4a11-9949-9be4118a7b83"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": "Permissão alterada"
                }
              }
            }
          }
        },
        "400": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": "A permissão esta incondizente com a solicitação"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": "Solicitação não existe"
                }
              }
            }
          }
        }
      }
    },
    "/stations/": {
      "get": {
        "summary": "Get All Station",
        "description": "This route has objective to get all station",
        "tags": [
          "Stations"
        ],
        "parameters": [
          {
            "name": "isActive",
            "description": "Colocar na URL ?isActive=true se desejar somente estações ativas",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Station"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Register station in the system",
        "description": "This route has objective to register station in the system",
        "tags": [
          "Stations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStation"
              },
              "examples": {
                "station": {
                  "value": {
                    "id": "C14H",
                    "name": "Estação do Sr. Branco",
                    "lat": 1511151,
                    "lon": 1111151,
                    "description": "Estação que mede valores para o sr. Branco",
                    "parameterTypes": [
                      {
                        "name": "Chuva 0.25",
                        "unit": "mm²",
                        "factor": 0.25,
                        "type": "pluv"
                      },
                      {
                        "name": "Temperatura",
                        "unit": "°C",
                        "factor": 0.1,
                        "type": "temp"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "medida cadastrada com sucesso"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stations/{id}/": {
      "get": {
        "summary": "Get One Station",
        "description": "This route has objective to get one stations",
        "tags": [
          "Stations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station ID for search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/Station"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete One Station",
        "description": "This route has objective to delete a station",
        "tags": [
          "Stations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station Id for search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Estação deletada com sucesso"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Estação não encontrada"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stations/activate/:id": {
      "put": {
        "summary": "Activate One Station",
        "description": "This route has objective to activate a station",
        "tags": [
          "Stations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station Id for search",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "message": "Estação foi ativada"
              }
            }
          }
        }
      }
    },
    "/parametersType": {
      "post": {
        "summary": "Register new parameter type in an exist station",
        "description": "This route has objective register new parameter type in an exist station",
        "tags": [
          "Parameter Types"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterTypes"
              }
            }
          }
        }
      }
    },
    "/measurements/": {
      "post": {
        "summary": "Register measurements from stations",
        "description": "This route has objective to register measurements from stations",
        "tags": [
          "Measurements"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeasurements"
              },
              "examples": {
                "station": {
                  "value": {
                    "stationId": "C14H",
                    "measurements": {
                      "heat": 25,
                      "pluv": 7
                    },
                    "moment": 1664967600
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": "medida cadastrada com sucesso"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/": {
      "get": {
        "summary": "Get Parameters from stations collects",
        "description": "This route has objective to get data from stations",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station Id for search",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameter",
            "in": "query",
            "description": "Parameter filter for query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/Dashboard"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "imgSrc": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "imgSrc": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "UpdateRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "CreateStation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lat": {
            "type": "number"
          },
          "lon": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "parameterTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "unit": {
                  "type": "string"
                },
                "factor": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Station": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lat": {
            "type": "number"
          },
          "lon": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "timestamp"
          },
          "isActive": {
            "type": "boolean"
          },
          "parameterTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "unit": {
                  "type": "string"
                },
                "factor": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ParameterTypes": {
        "type": "object",
        "properties": {
          "parameterTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "unit": {
                  "type": "string"
                },
                "factor": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "stationId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "moment": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "DashboardQueryParams": {
        "type": "object",
        "properties": {
          "station": {
            "type": "string"
          },
          "parameter": {
            "type": "string"
          }
        }
      },
      "CreateSolicitation": {
        "type": "object",
        "properties": {
          "roleReq": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "SolicitationPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "roleReq": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "ChangeSolicitation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "roleReq": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "CreateMeasurements": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "string"
          },
          "measurements": {
            "type": "object",
            "properties": {
              "heat": {
                "type": "number"
              },
              "pluv": {
                "type": "number"
              }
            }
          },
          "moment": {
            "type": "number"
          }
        }
      }
    }
  }
}